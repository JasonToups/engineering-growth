/* Even Fibonacci

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/

/* 
PLAN

input number
output number {sum}

Only add the even numbers in the sequence.

Use the modulus operator to only check for the even numbers

I don't know what number to pass into the function.
Is it 10?
Or 4 million?

I had to look this one up, I don't think I truly understood what they were asking, so I couldn't solve it myself.

*/

function fiboEvenSum(number) {
  let previous = 0;
  let current = 1;
  let result = 0;
  for (let i=0; ; i++) {
    const next = previous + current;
    if (next > number){
      break;
    }
    if (next % 2 === 0) {
      result += next;
    }
    previous = current;
    current = next;
  }
  return result;
}

var n = 34
console.log(fiboEvenSum(n))
// Output: "23"
// Explanation: The sum of all multiples of 3 or 5 below 10 is 23


var n = 4000000
console.log(fiboEvenSum(n))
console.log("Output should be: 4613732")
